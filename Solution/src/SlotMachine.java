//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : SlotMachine.java
//  @ Date : 2019.03.20.
//  @ Author : 
//
//
import java.util.concurrent.ThreadLocalRandom;


/**
 * A játékgépet megvalósító osztály.
 *
 * @author Cynolter
 */
public class SlotMachine extends Item {

    /**
     * A countDown függvény csökkenti a Counter attribútumát az osztálynak, amint az eléri a 0-t,
     * akkor csörög és reszetelődik a Counter.
     */
    @Override
    public void countDown() {
        System.out.println(">   SlotMachine::countDown()");
        --Counter;
        if (Counter <= 0) {
            for (BaseTile tile : onTile.getNeighbours()) {
                tile.ring();
            }
            int rn = ThreadLocalRandom.current().nextInt(75,125+1);
            Counter = rn;
        }
        System.out.println("<   SlotMachine::countDown()");
    }

    /**
     * A konstruktor, amelyikben meg kell adni, melyik csempére kerül a gép, és kezdőállapotba állítjuk a Counter attribútumot.
     *
     * @param t A csempe, amelyiken a játékgép található.
     */
    public SlotMachine(Tile t) {
        System.out.println(">   SlotMachine::SlotMachine(Tile t)");
        onTile = t;
        //int rn = ThreadLocalRandom.current().nextInt(75,125+1);
        //Counter = rn;
        Counter = 1;
        System.out.println("<   SlotMachine::SlotMachine(Tile t)");
    }
}
