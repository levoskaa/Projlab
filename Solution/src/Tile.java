//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Tile.java
//  @ Date : 2019.03.20.
//  @ Author : 
//
//

import javax.imageio.ImageIO;
import java.io.IOException;

/**
 * Egy csempe viselkedeset megvalosito osztaly.
 *
 * @author Konczos
 */

public class Tile extends BaseTile {

    /**
     * A csempén elhelyezkedo specialis funkcioalitással ellatott tárgy
     * referenciajat tarolo Item.
     */
    private Item localItem;

    /**
     *A Tile osztaly konstruktora, letrehozaskor betolti a kepet is
     */
    public Tile() {
        try {
            image = ImageIO.read(getClass().getResource( "images/tile.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * A fuggveny a csokiautomata sipolasan keresztul ugrasra keszteti az ugro pandakat.
     */
    public void beep() {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::beep()");
        }

        localAnimal.jump();

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::beep()");
        }
        return;
    }

    /**
     * A fuggveny a jatekgep csilingelesen keresztul a szomszedai
     * kezenek elengedesere keszteti az ijedos pandakat.
     */
    public void ring() {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::ring()");
        }

        localAnimal.scare();

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::ring()");
        }
        return;
    }

    /**
     * A fuggveny teszi lehetove a faradt pandak leulteteset egy fotelre.
     */
    public void tire() {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::tire(Tile t)");
        }

        for (BaseTile bt : neighbours) {
            bt.sitAnimal(this);
        }

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::tire(Tile t)");
        }
        return;
    }

    /**
     * A fuggvennyel egy targyat helyezunk a csempere.
     *
     * @param i A targy amelyet a csempere helyezunk.
     */
    public void setItem(Item i) {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::setItem(Item i)");
        }

        localItem = i;

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::setItem(Item i)");
        }
        return;
    }


    /**
     * A fuggvennyel lekerdezzuk, milyen targy van a csempen.
     *
     * @return A targy ami a csempen van.
     */
    public Item getItem() {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::getItem()");
        }

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::getItem()");
        }
        return localItem;
    }

    /**
     * A fuggvennyel egy allatot helyezunk a csempere.
     *
     * @param a Az allat amelyet a csempere helyezunk.
     */
    public void setAnimal(Animal a) {
        if (SkeletonMenu.indent) {
            GameLogic.indent(true);
            System.out.println(">   Tile::setAnimal(Animal a)");
        }

        localAnimal = a;

        if (SkeletonMenu.indent) {
            GameLogic.indent(false);
            System.out.println("<   Tile::setAnimal(Animal a)");
        }
        return;
    }
}
